@page
@model CybontrolX.Pages.ClubStaffModel
@{
    ViewData["Title"] = "Сотрудники";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="d-flex align-items-center mb-3">
    <input type="text" id="searchInput" class="form-control-search me-2" placeholder="Поиск" />
</div>

<form id="deleteForm" method="post" asp-page-handler="DeleteEmployees" class="d-flex align-items-center mb-4">
    <input type="hidden" id="SelectedEmployeeIds" name="SelectedEmployeeIds" />
    <button id="selectAllButton" type="button" class="btn btn-small btn-purple me-2">Выбрать все</button>
    <button id="editButton" type="button" class="btn btn-small btn-purple me-2" onclick="editEmployee()">Редактировать</button>
    <button id="deleteButton" type="submit" class="btn btn-small btn-danger" disabled>Удалить</button>
</form>

<table class="table table-dark w-100">
    <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col">
                <a href="?SortColumn=FullName&SortDescending=@(!Model.SortDescending)">
                    Имя @if (Model.SortColumn == "Name")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
            <th scope="col">
                <a href="?SortColumn=FullName&SortDescending=@(!Model.SortDescending)">
                    Фамилия @if (Model.SortColumn == "Surname")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
            <th scope="col">
                <a href="?SortColumn=FullName&SortDescending=@(!Model.SortDescending)">
                    Отчество @if (Model.SortColumn == "Patronymic")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
            <th scope="col">
                <a href="?SortColumn=PhoneNumber&SortDescending=@(!Model.SortDescending)">
                    Телефон @if (Model.SortColumn == "PhoneNumber")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
            <th scope="col">
                <a href="?SortColumn=Status&SortDescending=@(!Model.SortDescending)">
                    Статус @if (Model.SortColumn == "Status")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
            <th scope="col">
                <a href="?SortColumn=Role&SortDescending=@(!Model.SortDescending)">
                    Должность @if (Model.SortColumn == "Role")
                    {
                        <span>@(Model.SortDescending ? "▼" : "▲")</span>
                    }
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Employees != null && Model.Employees.Any())
        {
            @foreach (var employee in Model.Employees)
            {
                <tr data-id="@employee.Id" class="table-row" onclick="selectRow(this)">
                    <td><input type="checkbox" name="SelectedEmployeeIds" value="@employee.Id" /></td>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.Patronymic</td>
                    <td>@employee.PhoneNumber</td>
                    <td>@employee.Status</td>
                    <td>@employee.Role</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">Сотрудники не найдены</td>
            </tr>
        }
    </tbody>
</table>

<script>
     let allEmployees = [];

    // Загружаем всех сотрудников при загрузке страницы
    document.addEventListener('DOMContentLoaded', () => {
        fetch('/ClubStaff?handler=AllEmployees')
            .then(response => response.json())
            .then(data => {
                allEmployees = data;
                updateEmployeeTable(allEmployees); // Инициализация таблицы
                updateButtons(); // Инициализация состояния кнопок
            })
            .catch(error => console.error('Ошибка при загрузке сотрудников:', error));
    });

    document.getElementById('searchInput').addEventListener('input', function () {
        const searchQuery = this.value.trim().toLowerCase();
        console.log('Search query:', searchQuery); // Отладка

        const filteredEmployees = allEmployees.filter(employee =>
            employee.name.toLowerCase().includes(searchQuery) ||
            employee.surname.toLowerCase().includes(searchQuery) ||
            employee.patronymic.toLowerCase().includes(searchQuery) ||
            employee.phoneNumber.toLowerCase().includes(searchQuery)
        );

        updateEmployeeTable(filteredEmployees);
        updateButtons(); // Обновляем состояние кнопок после фильтрации
    });

    // Обновление таблицы с сотрудниками
    function updateEmployeeTable(employees) {
        const tbody = document.querySelector('.table tbody');
        tbody.innerHTML = ''; // Очищаем текущую таблицу

        if (employees.length === 0) {
            tbody.innerHTML = '<tr><td colspan="7">Сотрудники не найдены</td></tr>';
            return;
        }

        employees.forEach(employee => {
            const row = document.createElement('tr');
            row.setAttribute('data-id', employee.id);
            row.classList.add('table-row');
            row.onclick = () => selectRow(row);

            row.innerHTML = `
                <td><input type="checkbox" name="SelectedEmployeeIds" value="${employee.id}" /></td>
                <td>${employee.name}</td>
                <td>${employee.surname}</td>
                <td>${employee.patronymic}</td>
                <td>${employee.phoneNumber}</td>
                <td>${employee.status}</td>
                <td>${employee.role}</td>
            `;

            tbody.appendChild(row);
        });
    }

    function selectRow(row) {
        document.querySelectorAll('.table-row').forEach(r => r.classList.remove('selected'));

        row.classList.add('selected');

        var checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.checked = true;

        updateButtons();
    }

    function editEmployee() {
            var selectedRow = document.querySelector('.table-row.selected');
            if (selectedRow) {
                var employeeId = selectedRow.getAttribute('data-id');
                window.location.href = '/EditEmployee?id=' + employeeId;
            }
    }

    function updateButtons() {
        var selectedRow = document.querySelector('.table-row.selected');
        var deleteButton = document.getElementById('deleteButton');
        var editButton = document.getElementById('editButton');
        var selectedCheckboxes = document.querySelectorAll('.table-row input[type="checkbox"]:checked');

        editButton.disabled = !selectedRow;
        deleteButton.disabled = selectedCheckboxes.length === 0;
    }

    document.getElementById('selectAllButton').addEventListener('click', function () {
        var checkboxes = document.querySelectorAll('.table-row input[type="checkbox"]');
        var allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);

        checkboxes.forEach(checkbox => {
            checkbox.checked = !allChecked;
            checkbox.closest('tr').classList.toggle('selected', checkbox.checked);
        });

        updateButtons();
    });

    document.getElementById('editButton').addEventListener('click', function () {
        var selectedRow = document.querySelector('.table-row.selected');
        if (selectedRow) {
            var employeeId = selectedRow.getAttribute('data-id');
            window.location.href = '/EditEmployee?id=' + employeeId;
        }
    });

    document.getElementById('deleteForm').addEventListener('submit', function () {
        const selectedIds = Array.from(document.querySelectorAll('.table-row input[type="checkbox"]:checked'))
            .map(checkbox => checkbox.value);
        document.getElementById('SelectedEmployeeIds').value = selectedIds.join(',');
    });
</script>
