@page
@model CybontrolX.Pages.ComputersModel
@{
    ViewData["Title"] = "Компьютеры";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <a href="/CreateComputer" class="btn btn-primary">Добавить компьютер</a>
</div>

<div class="d-flex align-items-center mb-3">
    <input type="text" id="searchInput" class="form-control-search me-2" placeholder="Поиск" />
</div>

<form id="deleteForm" method="post" asp-page-handler="DeleteComputers" class="d-flex align-items-center mb-4">
    <input type="hidden" id="SelectedComputerIds" name="SelectedComputerIds" />
    <button id="selectAllButton" type="button" class="btn btn-small btn-purple me-2">Выбрать все</button>
    <button id="deleteButton" type="submit" class="btn btn-small btn-danger" disabled>Удалить</button>
</form>

<table class="table table-dark w-100">
    <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col">IP Компьютера</th>
            <th scope="col">Статус</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Computers != null && Model.Computers.Any())
        {
            @foreach (var computer in Model.Computers)
            {
                var activeSession = computer.Session.FirstOrDefault(s => s.IsActive);
                <tr data-id="@computer.Id" class="table-row @(activeSession != null ? "table-active" : "")" onclick="selectRow(this)">
                    <td><input type="checkbox" name="SelectedComputerIds" value="@computer.Id" /></td>
                    <td>@computer.ComputerIP</td>
                    <td>@(activeSession != null ? "Активен" : "Не активен")</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3">Компьютеры не найдены</td>
            </tr>
        }
    </tbody>
</table>

<script>
    let allComputers = [];

    document.addEventListener('DOMContentLoaded', () => {
        fetch('/Computers?handler=AllComputers')
            .then(response => response.json())
            .then(data => {
                allComputers = data;
                updateComputerTable(allComputers);
                attachCheckboxListeners();
                updateButtons();
            })
            .catch(error => console.error('Ошибка при загрузке компьютеров:', error));
    });

    document.getElementById('searchInput')?.addEventListener('input', function () {
        const searchQuery = this.value.trim().toLowerCase();
        const filteredComputers = allComputers.filter(computer =>
            computer.computerIP.toLowerCase().includes(searchQuery) ||
            (computer.status ? "активная" : "неактивная").includes(searchQuery)
        );

        updateComputerTable(filteredComputers);
        attachCheckboxListeners();
        updateButtons();
    });

    function updateComputerTable(computers) {
        const tbody = document.querySelector('.table tbody');
        tbody.innerHTML = '';

        if (computers.length === 0) {
            tbody.innerHTML = '<tr><td colspan="3">Компьютеры не найдены</td></tr>';
            return;
        }

        computers.forEach(computer => {
            const row = document.createElement('tr');
            row.setAttribute('data-id', computer.id);
            row.classList.add('table-row');
            row.onclick = () => selectRow(row);

            row.innerHTML = `
                <td><input type="checkbox" name="SelectedComputerIds" value="${computer.id}" /></td>
                <td>${computer.computerIP}</td>
                <td>${computer.status ? "Активная" : "Неактивная"}</td>
            `;

            tbody.appendChild(row);
        });
    }

    function attachCheckboxListeners() {
        const checkboxes = document.querySelectorAll('.table-row input[type="checkbox"]');
        checkboxes.forEach(checkbox => {
            checkbox.onchange = () => {
                const row = checkbox.closest('tr');
                if (row) {
                    row.classList.toggle('selected', checkbox.checked);
                }
                updateButtons();
            };
        });
    }

    function selectRow(row) {
        var checkbox = row.querySelector('input[type="checkbox"]');
        checkbox.checked = !checkbox.checked;
        row.classList.toggle('selected', checkbox.checked);
        updateButtons();
    }

    function updateButtons() {
        var selectedCheckboxes = document.querySelectorAll('.table-row input[type="checkbox"]:checked');
        var deleteButton = document.getElementById('deleteButton');
        var editButton = document.getElementById('editButton');

        if (deleteButton) {
            deleteButton.disabled = selectedCheckboxes.length === 0;
        }

        if (editButton) {
            editButton.disabled = selectedCheckboxes.length !== 1;
        }
    }

    document.getElementById('selectAllButton')?.addEventListener('click', function () {
        var checkboxes = document.querySelectorAll('.table-row input[type="checkbox"]');
        var allChecked = Array.from(checkboxes).every(cb => cb.checked);
        checkboxes.forEach(checkbox => {
            checkbox.checked = !allChecked;
            checkbox.closest('tr').classList.toggle('selected', checkbox.checked);
        });
        updateButtons();
    });

    // Для формы удаления
    document.getElementById('deleteForm')?.addEventListener('submit', function () {
        updateSelectedComputerIds();
    });

    document.getElementById('editButton')?.addEventListener('click', function () {
        var selectedCheckbox = document.querySelector('.table-row input[type="checkbox"]:checked');
        if (selectedCheckbox) {
            var computerId = selectedCheckbox.value;
            window.location.href = '/EditComputer?id=' + computerId;
        }
    });

    function updateSelectedComputerIds() {
        var selectedCheckboxes = document.querySelectorAll('.table-row input[type="checkbox"]:checked');
        var selectedComputerIds = Array.from(selectedCheckboxes)
            .map(cb => cb.value.trim())
            .filter(id => id);
        document.getElementById('SelectedComputerIds')?.setAttribute('value', selectedComputerIds.join(','));
    }
</script>
